{"version":3,"sources":["components/Card.js","components/Cards.js","App.js","reportWebVitals.js","index.js"],"names":["Card","image","store","name","price","measure","useState","favorite","setFavorite","value","setValue","className","map","d","index","src","thumbnail_image","alt","alternative_text","Grid","ButtonBase","onClick","Favorite","style","fill","FavoriteBorder","Box","component","mb","borderColor","Rating","onChange","event","newValue","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","Cards","data","classes","open","setOpen","currentSort","sort","setSort","allData","setAllData","anchorRef","useRef","handleClose","current","contains","target","handleListKeyDown","key","preventDefault","prevOpen","useEffect","focus","sortTypes","up","class","fn","a","b","sell_price","down","default","onSortUp","onSortDown","onSortdDefault","type","placeholder","e","result","toLowerCase","console","log","filter","dt","search","Button","ref","aria-controls","undefined","aria-haspopup","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","onKeyDown","MenuItem","length","SpreeProductImages","SpreeStore","store_name","unit_measure","axios","require","query","headers","params","limit","skip","App","props","state","get","stringify","then","res","rows","datas","setState","catch","error","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fff1117.chunk.js","sourcesContent":["import { Box, ButtonBase, Grid } from '@material-ui/core'\r\nimport { Favorite, FavoriteBorder } from '@material-ui/icons'\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport React, { useState } from 'react'\r\nimport Zoom from 'react-medium-image-zoom'\r\nimport 'react-medium-image-zoom/dist/styles.css'\r\nimport '../styles/card.css'\r\n\r\nconst Card = ({image, store, name, price, measure}) => {\r\n    const [favorite, setFavorite] = useState(false)\r\n    const [value, setValue] = useState(0);\r\n    const handleClickFavorite = () => {\r\n        setFavorite(!favorite)\r\n    }\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-img\">\r\n                {image.map((d, index) =>{\r\n                    return (\r\n                        <div key={index}>\r\n                            <Zoom>\r\n                                <img className=\"\" src={`https://apis-dev.aspenku.com${d.thumbnail_image}`} alt={`https://apis-dev.aspenku.com${d.alternative_text}`} />\r\n                            </Zoom>\r\n                        </div>  \r\n                    ) \r\n                })}\r\n                <div className=\"card-like\">\r\n                    <span>\r\n                        <Grid>\r\n                        <ButtonBase onClick={handleClickFavorite}>\r\n                            {favorite ? <Favorite style={{fill: 'red'}}/>:<FavoriteBorder />}\r\n                        </ButtonBase>\r\n                        </Grid>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-rating\">\r\n                <span>\r\n                <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                    <Rating\r\n                    name=\"simple-controlled\"\r\n                    value={value}\r\n                    onChange={(event, newValue) => {\r\n                        setValue(newValue);\r\n                    }}\r\n                    />\r\n                </Box>\r\n                </span>\r\n            </div>\r\n            <div className=\"card-store\">\r\n                <h5>{store}</h5>\r\n            </div>\r\n            <div className=\"card-name\">\r\n                <h3>{name}</h3>\r\n            </div>\r\n            <div className=\"card-price\">\r\n                $ {price}\r\n                <span>/ {measure}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport Card from './Card'\r\nimport '../styles/card.css'\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport TrendingDownIcon from '@material-ui/icons/TrendingDown';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    paper: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nconst Cards = ({data}) => {\r\n    \r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [sort, setSort] = useState({currentSort: 'default'})\r\n    const [allData, setAllData] = useState({})\r\n\r\n    const anchorRef = useRef(null);\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n        return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleListKeyDown = (event) => {\r\n        if (event.key === 'Tab') {\r\n        event.preventDefault();\r\n        setOpen(false);\r\n        }\r\n    }\r\n\r\n    const prevOpen = useRef(open);\r\n    useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n        anchorRef.current.focus();\r\n        }\r\n\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n\r\n    const onSearch = (e) => {\r\n        let value = e.target.value.toLowerCase();\r\n        let result = [];\r\n        console.log(value)\r\n\r\n        result = data.filter((dt) => {\r\n            return dt.name.toLowerCase().search(value) !== -1;\r\n        });\r\n\r\n        setAllData(result)\r\n    }\r\n\r\n    const sortTypes = {\r\n        up: {\r\n            class: 'sort-up',\r\n            fn: (a, b) => a.sell_price - b.sell_price\r\n        },\r\n        down: {\r\n            class: 'sort-down',\r\n            fn: (a, b) => b.sell_price - a.sell_price\r\n        },\r\n        default: {\r\n            class: 'sort',\r\n            fn: (a, b) => a\r\n        }\r\n    };\r\n\r\n    const onSortUp = () => {\r\n        setSort({\r\n            currentSort : 'down'\r\n        })\r\n    }\r\n\r\n    const onSortDown = () => {\r\n        setSort({\r\n            currentSort : 'up'\r\n        })\r\n    }\r\n\r\n    const onSortdDefault = () => {\r\n        setSort({\r\n            currentSort : 'default'\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className=\"cards\">\r\n            <div className=\"topbar\">\r\n                <div className=\"container\">\r\n                    <div className=\"divide\">\r\n                        <div className=\"dv-left\">\r\n                            <div className=\"search\">\r\n                                <input type=\"text\" className=\"search-bar\" placeholder=\"Search product...\" onChange={onSearch}/>\r\n                                <span className=\"search-icon\"><SearchIcon/> </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"dv-right\">\r\n                            <div className={classes.root}>\r\n                                <div>\r\n                                    <Button\r\n                                    ref={anchorRef}\r\n                                    aria-controls={open ? 'menu-list-grow' : undefined}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleToggle}\r\n                                    >\r\n                                    Sort Product <ExpandMoreIcon/>\r\n                                    </Button>\r\n                                    <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                                    {({ TransitionProps, placement }) => (\r\n                                        <Grow\r\n                                        {...TransitionProps}\r\n                                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                                        >\r\n                                        <Paper>\r\n                                            <ClickAwayListener onClickAway={handleClose}>\r\n                                            <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                                                <MenuItem onClick={onSortdDefault}><MenuIcon/>  Default</MenuItem>\r\n                                                <MenuItem onClick={onSortDown}><TrendingDownIcon/>  Lowest Price</MenuItem>\r\n                                                <MenuItem onClick={onSortUp}><TrendingUpIcon/>  Highest Price</MenuItem>\r\n                                            </MenuList>\r\n                                            </ClickAwayListener>\r\n                                        </Paper>\r\n                                        </Grow>\r\n                                    )}\r\n                                    </Popper>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n            { (allData.length > 0) ? [...allData].sort(sortTypes[sort.currentSort].fn).map((d, index) => {\r\n                return(\r\n                    <div key={index} className=\"line-item column\">\r\n                        <Card \r\n                            image={d.SpreeProductImages}\r\n                            name={d.name}\r\n                            store={d.SpreeStore.store_name}\r\n                            price={d.sell_price}\r\n                            measure={d.unit_measure}\r\n                        />\r\n                    </div>\r\n                )\r\n            }) : \r\n            (data.length > 0) ? [...data].sort(sortTypes[sort.currentSort].fn).map((d, index) => {\r\n                return(\r\n                        <div key={index} className=\"line-item column\">\r\n                        <Card \r\n                            image={d.SpreeProductImages}\r\n                            name={d.name}\r\n                            store={d.SpreeStore.store_name}\r\n                            price={d.sell_price}\r\n                            measure={d.unit_measure}\r\n                        />\r\n                    </div>                   \r\n                )\r\n            }): <span>Loading...</span>}\r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import React, { Component } from 'react'\nimport Cards from './components/Cards';\n// import Table from './components/Table'\nimport './styles/app.css'\n\nconst axios = require('axios');\nconst query = require('querystring')\nconst apiURL = 'https://apis-dev.aspenku.com/api/v1/product';\nconst apiToken = 'QXNwZW5rdTpBc3Blbmt1';\nconst auth = 'Basic '+ apiToken;\n\nconst headers  = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": auth\n}\n\nconst params = {\n  limit: 100,\n  skip: 0,\n  price: {\"min\":\"1\",\"max\":\"1000\"}\n}\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get(apiURL, {headers: headers }, query.stringify({params}))\n    .then(res => res.data.data.rows)\n    .then(datas => this.setState({'data' : datas}))\n    .catch((error) => {\n      console.log('error' + error)\n    })\n\n  }\n\n  render() {\n    console.log(\"dataa: \", this.state.data)\n    return (\n      <div className=\"App\">\n        {/* <Table data = {this.state.data} /> */}\n        <Cards data = {this.state.data} />\n      </div>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}